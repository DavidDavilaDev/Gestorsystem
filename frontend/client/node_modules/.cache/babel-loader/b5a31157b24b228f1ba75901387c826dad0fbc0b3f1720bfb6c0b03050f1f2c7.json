{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\jessi\\\\OneDrive\\\\Escritorio\\\\PRACTICAS SAID\\\\padlet\\\\client\\\\src\\\\components\\\\list\\\\MoveList.js\",\n  _s = $RefreshSig$();\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { moveList } from '../../actions/board';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport CloseIcon from '@material-ui/icons/Close';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport useStyles from '../../utils/dialogStyles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MoveList = ({\n  listId,\n  closeMenu\n}) => {\n  _s();\n  const classes = useStyles();\n  const [openDialog, setOpenDialog] = useState(false);\n  const [position, setPosition] = useState(0);\n  const [positions, setPositions] = useState([0]);\n  const lists = useSelector(state => state.board.board.lists);\n  const listObjects = useSelector(state => state.board.board.listObjects);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    const mappedListObjects = listObjects.sort((a, b) => lists.findIndex(id => id === a._id) - lists.findIndex(id => id === b._id)).map((list, index) => ({\n      list,\n      index\n    }));\n    setPositions(mappedListObjects.filter(list => !list.list.archived).map(list => list.index));\n    setPosition(mappedListObjects.findIndex(list => list.list._id === listId));\n  }, [lists, listId, listObjects]);\n  const onSubmit = async () => {\n    dispatch(moveList(listId, {\n      toIndex: position\n    }));\n    setOpenDialog(false);\n    closeMenu();\n  };\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => setOpenDialog(true),\n      children: \"Mover Lista\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Dialog, {\n      open: openDialog,\n      onClose: () => setOpenDialog(false),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.moveListTop,\n        children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n          children: 'Move List'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          onClick: () => setOpenDialog(false),\n          children: /*#__PURE__*/_jsxDEV(CloseIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DialogActions, {\n        className: classes.moveListBottom,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            shrink: true,\n            children: \"Posicion\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            value: position,\n            required: true,\n            onChange: e => setPosition(e.target.value),\n            displayEmpty: true,\n            children: positions.map((position, index) => /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: position,\n              children: index + 1\n            }, position, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            type: \"submit\",\n            variant: \"contained\",\n            color: \"primary\",\n            className: classes.moveListButton,\n            onClick: onSubmit,\n            children: \"Mover Lista\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n};\n_s(MoveList, \"iNx1uNHy8GmLTaw4opuuD0W2mUA=\", false, function () {\n  return [useStyles, useSelector, useSelector, useDispatch];\n});\n_c = MoveList;\nMoveList.propTypes = {\n  listId: PropTypes.string.isRequired,\n  closeMenu: PropTypes.func.isRequired\n};\nexport default MoveList;\nvar _c;\n$RefreshReg$(_c, \"MoveList\");","map":{"version":3,"names":["React","Fragment","useState","useEffect","useSelector","useDispatch","PropTypes","moveList","Button","Dialog","DialogActions","DialogTitle","CloseIcon","InputLabel","MenuItem","FormControl","Select","useStyles","jsxDEV","_jsxDEV","MoveList","listId","closeMenu","_s","classes","openDialog","setOpenDialog","position","setPosition","positions","setPositions","lists","state","board","listObjects","dispatch","mappedListObjects","sort","a","b","findIndex","id","_id","map","list","index","filter","archived","onSubmit","toIndex","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","open","onClose","className","moveListTop","moveListBottom","shrink","value","required","onChange","e","target","displayEmpty","type","variant","color","moveListButton","_c","propTypes","string","isRequired","func","$RefreshReg$"],"sources":["C:/Users/jessi/OneDrive/Escritorio/PRACTICAS SAID/padlet/client/src/components/list/MoveList.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { moveList } from '../../actions/board';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport useStyles from '../../utils/dialogStyles';\r\n\r\nconst MoveList = ({ listId, closeMenu }) => {\r\n  const classes = useStyles();\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [position, setPosition] = useState(0);\r\n  const [positions, setPositions] = useState([0]);\r\n  const lists = useSelector((state) => state.board.board.lists);\r\n  const listObjects = useSelector((state) => state.board.board.listObjects);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const mappedListObjects = listObjects\r\n      .sort(\r\n        (a, b) =>\r\n          lists.findIndex((id) => id === a._id) - lists.findIndex((id) => id === b._id)\r\n      )\r\n      .map((list, index) => ({ list, index }));\r\n    setPositions(\r\n      mappedListObjects.filter((list) => !list.list.archived).map((list) => list.index)\r\n    );\r\n    setPosition(mappedListObjects.findIndex((list) => list.list._id === listId));\r\n  }, [lists, listId, listObjects]);\r\n\r\n  const onSubmit = async () => {\r\n    dispatch(moveList(listId, { toIndex: position }));\r\n    setOpenDialog(false);\r\n    closeMenu();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div onClick={() => setOpenDialog(true)}>Mover Lista</div>\r\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>\r\n        <div className={classes.moveListTop}>\r\n          <DialogTitle>{'Move List'}</DialogTitle>\r\n          <Button onClick={() => setOpenDialog(false)}>\r\n            <CloseIcon />\r\n          </Button>\r\n        </div>\r\n        <DialogActions className={classes.moveListBottom}>\r\n          <FormControl>\r\n            <InputLabel shrink>Posicion</InputLabel>\r\n            <Select\r\n              value={position}\r\n              required\r\n              onChange={(e) => setPosition(e.target.value)}\r\n              displayEmpty\r\n            >\r\n              {positions.map((position, index) => (\r\n                <MenuItem key={position} value={position}>\r\n                  {index + 1}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.moveListButton}\r\n              onClick={onSubmit}\r\n            >\r\n              Mover Lista\r\n            </Button>\r\n          </FormControl>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nMoveList.propTypes = {\r\n  listId: PropTypes.string.isRequired,\r\n  closeMenu: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default MoveList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}