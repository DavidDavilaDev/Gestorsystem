{"ast":null,"code":"import axios from'axios';import{setAlert}from'./alert';import{CLEAR_BOARD,GET_BOARDS,GET_BOARD,ADD_BOARD,BOARD_ERROR,RENAME_BOARD,GET_LIST,ADD_LIST,RENAME_LIST,ARCHIVE_LIST,GET_CARD,ADD_CARD,EDIT_CARD,MOVE_CARD,ARCHIVE_CARD,DELETE_CARD,GET_ACTIVITY,ADD_MEMBER,MOVE_LIST,ADD_CARD_MEMBER,ADD_CHECKLIST_ITEM,EDIT_CHECKLIST_ITEM,COMPLETE_CHECKLIST_ITEM,DELETE_CHECKLIST_ITEM}from'./types';const config={headers:{'Content-Type':'application/json'}};// Get boards\nexport const getBoards=()=>async dispatch=>{try{dispatch({type:CLEAR_BOARD});const res=await axios.get('/api/boards');dispatch({type:GET_BOARDS,payload:res.data});}catch(err){dispatch({type:BOARD_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Get board\nexport const getBoard=id=>async dispatch=>{try{const res=await axios.get(\"/api/boards/\".concat(id));if(res){axios.defaults.headers.common['boardId']=id;}else{delete axios.defaults.headers.common['boardId'];}dispatch({type:GET_BOARD,payload:{...res.data,listObjects:[],cardObjects:[]}});}catch(err){dispatch({type:BOARD_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Add board\nexport const addBoard=(formData,history)=>async dispatch=>{try{const body=JSON.stringify(formData);const res=await axios.post('/api/boards',body,config);dispatch({type:ADD_BOARD,payload:res.data});dispatch(setAlert('Board Created','success'));history.push(\"/board/\".concat(res.data._id));}catch(err){dispatch({type:BOARD_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Rename board\nexport const renameBoard=(boardId,formData)=>async dispatch=>{try{const res=await axios.patch(\"/api/boards/rename/\".concat(boardId),formData,config);dispatch({type:RENAME_BOARD,payload:res.data});dispatch(getActivity());}catch(err){dispatch({type:BOARD_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Get list\nexport const getList=id=>async dispatch=>{try{const res=await axios.get(\"/api/lists/\".concat(id));dispatch({type:GET_LIST,payload:res.data});}catch(err){dispatch({type:BOARD_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Add list\nexport const addList=formData=>async dispatch=>{try{const body=JSON.stringify(formData);const res=await axios.post('/api/lists',body,config);dispatch({type:ADD_LIST,payload:res.data});dispatch(getActivity());}catch(err){dispatch({type:BOARD_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Rename list\nexport const renameList=(listId,formData)=>async dispatch=>{try{const res=await axios.patch(\"/api/lists/rename/\".concat(listId),formData,config);dispatch({type:RENAME_LIST,payload:res.data});}catch(err){dispatch({type:BOARD_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Archive/Unarchive list\nexport const archiveList=(listId,archive)=>async dispatch=>{try{const res=await axios.patch(\"/api/lists/archive/\".concat(archive,\"/\").concat(listId));dispatch({type:ARCHIVE_LIST,payload:res.data});dispatch(getActivity());}catch(err){dispatch({type:BOARD_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Get card\nexport const getCard=id=>async dispatch=>{try{const res=await axios.get(\"/api/cards/\".concat(id));dispatch({type:GET_CARD,payload:res.data});}catch(err){dispatch({type:BOARD_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Add card\nexport const addCard=formData=>async dispatch=>{try{const body=JSON.stringify(formData);const res=await axios.post('/api/cards',body,config);dispatch({type:ADD_CARD,payload:res.data});dispatch(getActivity());}catch(err){dispatch({type:BOARD_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Edit card\nexport const editCard=(cardId,formData)=>async dispatch=>{try{const res=await axios.patch(\"/api/cards/edit/\".concat(cardId),formData,config);dispatch({type:EDIT_CARD,payload:res.data});return res;// Devolver la respuesta\n}catch(err){dispatch({type:BOARD_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Move card\nexport const moveCard=(cardId,formData)=>async dispatch=>{try{const body=JSON.stringify(formData);const res=await axios.patch(\"/api/cards/move/\".concat(cardId),body,config);dispatch({type:MOVE_CARD,payload:res.data});dispatch(getActivity());}catch(err){dispatch({type:BOARD_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Archive/Unarchive card\nexport const archiveCard=(cardId,archive)=>async dispatch=>{try{const res=await axios.patch(\"/api/cards/archive/\".concat(archive,\"/\").concat(cardId));dispatch({type:ARCHIVE_CARD,payload:res.data});dispatch(getActivity());}catch(err){dispatch({type:BOARD_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Delete card\nexport const deleteCard=(listId,cardId)=>async dispatch=>{try{const res=await axios.delete(\"/api/cards/\".concat(listId,\"/\").concat(cardId));dispatch({type:DELETE_CARD,payload:res.data});dispatch(getActivity());}catch(err){dispatch({type:BOARD_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Get activity\nexport const getActivity=()=>async dispatch=>{try{const boardId=axios.defaults.headers.common['boardId'];const res=await axios.get(\"/api/boards/activity/\".concat(boardId));dispatch({type:GET_ACTIVITY,payload:res.data});}catch(err){dispatch({type:BOARD_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Add member\nexport const addMember=userId=>async dispatch=>{try{const res=await axios.put(\"/api/boards/addMember/\".concat(userId));dispatch({type:ADD_MEMBER,payload:res.data});dispatch(getActivity());}catch(err){dispatch({type:BOARD_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Move list\nexport const moveList=(listId,formData)=>async dispatch=>{try{const body=JSON.stringify(formData);const res=await axios.patch(\"/api/lists/move/\".concat(listId),body,config);dispatch({type:MOVE_LIST,payload:res.data});}catch(err){dispatch({type:BOARD_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Add card member\nexport const addCardMember=formData=>async dispatch=>{try{const{add,cardId,userId}=formData;const res=await axios.put(\"/api/cards/addMember/\".concat(add,\"/\").concat(cardId,\"/\").concat(userId));dispatch({type:ADD_CARD_MEMBER,payload:res.data});dispatch(getActivity());}catch(err){dispatch({type:BOARD_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Add checklist item\nexport const addChecklistItem=(cardId,formData)=>async dispatch=>{try{const body=JSON.stringify(formData);const res=await axios.post(\"/api/checklists/\".concat(cardId),body,config);dispatch({type:ADD_CHECKLIST_ITEM,payload:res.data});}catch(err){dispatch({type:BOARD_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Edit checklist item\nexport const editChecklistItem=(cardId,itemId,formData)=>async dispatch=>{try{const body=JSON.stringify(formData);const res=await axios.patch(\"/api/checklists/\".concat(cardId,\"/\").concat(itemId),body,config);dispatch({type:EDIT_CHECKLIST_ITEM,payload:res.data});}catch(err){dispatch({type:BOARD_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Complete/Uncomplete checklist item\nexport const completeChecklistItem=formData=>async dispatch=>{try{const{cardId,complete,itemId}=formData;const res=await axios.patch(\"/api/checklists/\".concat(cardId,\"/\").concat(complete,\"/\").concat(itemId));dispatch({type:COMPLETE_CHECKLIST_ITEM,payload:res.data});}catch(err){dispatch({type:BOARD_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};// Delete checklist item\nexport const deleteChecklistItem=(cardId,itemId)=>async dispatch=>{try{const res=await axios.delete(\"/api/checklists/\".concat(cardId,\"/\").concat(itemId));dispatch({type:DELETE_CHECKLIST_ITEM,payload:res.data});}catch(err){dispatch({type:BOARD_ERROR,payload:{msg:err.response.statusText,status:err.response.status}});}};","map":{"version":3,"names":["axios","setAlert","CLEAR_BOARD","GET_BOARDS","GET_BOARD","ADD_BOARD","BOARD_ERROR","RENAME_BOARD","GET_LIST","ADD_LIST","RENAME_LIST","ARCHIVE_LIST","GET_CARD","ADD_CARD","EDIT_CARD","MOVE_CARD","ARCHIVE_CARD","DELETE_CARD","GET_ACTIVITY","ADD_MEMBER","MOVE_LIST","ADD_CARD_MEMBER","ADD_CHECKLIST_ITEM","EDIT_CHECKLIST_ITEM","COMPLETE_CHECKLIST_ITEM","DELETE_CHECKLIST_ITEM","config","headers","getBoards","dispatch","type","res","get","payload","data","err","msg","response","statusText","status","getBoard","id","concat","defaults","common","listObjects","cardObjects","addBoard","formData","history","body","JSON","stringify","post","push","_id","renameBoard","boardId","patch","getActivity","getList","addList","renameList","listId","archiveList","archive","getCard","addCard","editCard","cardId","moveCard","archiveCard","deleteCard","delete","addMember","userId","put","moveList","addCardMember","add","addChecklistItem","editChecklistItem","itemId","completeChecklistItem","complete","deleteChecklistItem"],"sources":["D:/David/Escritorio/CHAMBA/Gestor-de-proyectos/frontend/client/src/actions/board.js"],"sourcesContent":["import axios from 'axios';\r\nimport { setAlert } from './alert';\r\nimport {\r\n  CLEAR_BOARD,\r\n  GET_BOARDS,\r\n  GET_BOARD,\r\n  ADD_BOARD,\r\n  BOARD_ERROR,\r\n  RENAME_BOARD,\r\n  GET_LIST,\r\n  ADD_LIST,\r\n  RENAME_LIST,\r\n  ARCHIVE_LIST,\r\n  GET_CARD,\r\n  ADD_CARD,\r\n  EDIT_CARD,\r\n  MOVE_CARD,\r\n  ARCHIVE_CARD,\r\n  DELETE_CARD,\r\n  GET_ACTIVITY,\r\n  ADD_MEMBER,\r\n  MOVE_LIST,\r\n  ADD_CARD_MEMBER,\r\n  ADD_CHECKLIST_ITEM,\r\n  EDIT_CHECKLIST_ITEM,\r\n  COMPLETE_CHECKLIST_ITEM,\r\n  DELETE_CHECKLIST_ITEM,\r\n} from './types';\r\n\r\nconst config = {\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n};\r\n\r\n// Get boards\r\nexport const getBoards = () => async (dispatch) => {\r\n  try {\r\n    dispatch({ type: CLEAR_BOARD });\r\n\r\n    const res = await axios.get('/api/boards');\r\n\r\n    dispatch({\r\n      type: GET_BOARDS,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get board\r\nexport const getBoard = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/boards/${id}`);\r\n\r\n    if (res) {\r\n      axios.defaults.headers.common['boardId'] = id;\r\n    } else {\r\n      delete axios.defaults.headers.common['boardId'];\r\n    }\r\n\r\n    dispatch({\r\n      type: GET_BOARD,\r\n      payload: { ...res.data, listObjects: [], cardObjects: [] },\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add board\r\nexport const addBoard = (formData, history) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.post('/api/boards', body, config);\r\n\r\n    dispatch({\r\n      type: ADD_BOARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(setAlert('Board Created', 'success'));\r\n\r\n    history.push(`/board/${res.data._id}`);\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Rename board\r\nexport const renameBoard = (boardId, formData) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/boards/rename/${boardId}`, formData, config);\r\n\r\n    dispatch({\r\n      type: RENAME_BOARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get list\r\nexport const getList = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/lists/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_LIST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add list\r\nexport const addList = (formData) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.post('/api/lists', body, config);\r\n\r\n    dispatch({\r\n      type: ADD_LIST,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Rename list\r\nexport const renameList = (listId, formData) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/lists/rename/${listId}`, formData, config);\r\n\r\n    dispatch({\r\n      type: RENAME_LIST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Archive/Unarchive list\r\nexport const archiveList = (listId, archive) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/lists/archive/${archive}/${listId}`);\r\n\r\n    dispatch({\r\n      type: ARCHIVE_LIST,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get card\r\nexport const getCard = (id) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.get(`/api/cards/${id}`);\r\n\r\n    dispatch({\r\n      type: GET_CARD,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add card\r\nexport const addCard = (formData) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.post('/api/cards', body, config);\r\n\r\n    dispatch({\r\n      type: ADD_CARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Edit card\r\nexport const editCard = (cardId, formData) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/cards/edit/${cardId}`, formData, config);\r\n\r\n    dispatch({\r\n      type: EDIT_CARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    return res; // Devolver la respuesta\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n\r\n// Move card\r\nexport const moveCard = (cardId, formData) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.patch(`/api/cards/move/${cardId}`, body, config);\r\n\r\n    dispatch({\r\n      type: MOVE_CARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Archive/Unarchive card\r\nexport const archiveCard = (cardId, archive) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.patch(`/api/cards/archive/${archive}/${cardId}`);\r\n\r\n    dispatch({\r\n      type: ARCHIVE_CARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete card\r\nexport const deleteCard = (listId, cardId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/cards/${listId}/${cardId}`);\r\n\r\n    dispatch({\r\n      type: DELETE_CARD,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Get activity\r\nexport const getActivity = () => async (dispatch) => {\r\n  try {\r\n    const boardId = axios.defaults.headers.common['boardId'];\r\n\r\n    const res = await axios.get(`/api/boards/activity/${boardId}`);\r\n\r\n    dispatch({\r\n      type: GET_ACTIVITY,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add member\r\nexport const addMember = (userId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.put(`/api/boards/addMember/${userId}`);\r\n\r\n    dispatch({\r\n      type: ADD_MEMBER,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Move list\r\nexport const moveList = (listId, formData) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.patch(`/api/lists/move/${listId}`, body, config);\r\n\r\n    dispatch({\r\n      type: MOVE_LIST,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add card member\r\nexport const addCardMember = (formData) => async (dispatch) => {\r\n  try {\r\n    const { add, cardId, userId } = formData;\r\n\r\n    const res = await axios.put(`/api/cards/addMember/${add}/${cardId}/${userId}`);\r\n\r\n    dispatch({\r\n      type: ADD_CARD_MEMBER,\r\n      payload: res.data,\r\n    });\r\n\r\n    dispatch(getActivity());\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Add checklist item\r\nexport const addChecklistItem = (cardId, formData) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.post(`/api/checklists/${cardId}`, body, config);\r\n\r\n    dispatch({\r\n      type: ADD_CHECKLIST_ITEM,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Edit checklist item\r\nexport const editChecklistItem = (cardId, itemId, formData) => async (dispatch) => {\r\n  try {\r\n    const body = JSON.stringify(formData);\r\n\r\n    const res = await axios.patch(`/api/checklists/${cardId}/${itemId}`, body, config);\r\n\r\n    dispatch({\r\n      type: EDIT_CHECKLIST_ITEM,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Complete/Uncomplete checklist item\r\nexport const completeChecklistItem = (formData) => async (dispatch) => {\r\n  try {\r\n    const { cardId, complete, itemId } = formData;\r\n\r\n    const res = await axios.patch(`/api/checklists/${cardId}/${complete}/${itemId}`);\r\n\r\n    dispatch({\r\n      type: COMPLETE_CHECKLIST_ITEM,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n\r\n// Delete checklist item\r\nexport const deleteChecklistItem = (cardId, itemId) => async (dispatch) => {\r\n  try {\r\n    const res = await axios.delete(`/api/checklists/${cardId}/${itemId}`);\r\n\r\n    dispatch({\r\n      type: DELETE_CHECKLIST_ITEM,\r\n      payload: res.data,\r\n    });\r\n  } catch (err) {\r\n    dispatch({\r\n      type: BOARD_ERROR,\r\n      payload: { msg: err.response.statusText, status: err.response.status },\r\n    });\r\n  }\r\n};\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}