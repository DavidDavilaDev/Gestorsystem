{"ast":null,"code":"import{CLEAR_BOARD,GET_BOARDS,GET_BOARD,ADD_BOARD,BOARD_ERROR,RENAME_BOARD,GET_LIST,ADD_LIST,RENAME_LIST,ARCHIVE_LIST,GET_CARD,ADD_CARD,EDIT_CARD,MOVE_CARD,ARCHIVE_CARD,DELETE_CARD,GET_ACTIVITY,ADD_MEMBER,MOVE_LIST,ADD_CARD_MEMBER,ADD_CHECKLIST_ITEM,EDIT_CHECKLIST_ITEM,COMPLETE_CHECKLIST_ITEM,DELETE_CHECKLIST_ITEM}from'../actions/types';const initialState={boards:[],board:null,dashboardLoading:true,error:{}};export default function(){let state=arguments.length>0&&arguments[0]!==undefined?arguments[0]:initialState;let action=arguments.length>1?arguments[1]:undefined;const{type,payload}=action;switch(type){case CLEAR_BOARD:return{...state,board:null};case GET_BOARDS:return{...state,boards:payload,dashboardLoading:false};case RENAME_BOARD:case GET_BOARD:return{...state,board:{...state.board,...payload}};case ADD_BOARD:return{...state,boards:[payload,...state.boards]};case BOARD_ERROR:return{...state,error:payload};case GET_LIST:return{...state,board:{...state.board,listObjects:[...state.board.listObjects,payload]}};case ADD_LIST:return{...state,board:{...state.board,lists:[...state.board.lists,payload._id]}};case ARCHIVE_LIST:case RENAME_LIST:return{...state,board:{...state.board,listObjects:state.board.listObjects.map(list=>list._id===payload._id?payload:list)}};case GET_CARD:return{...state,board:{...state.board,cardObjects:[...state.board.cardObjects,payload]}};case ADD_CARD:return{...state,board:{...state.board,listObjects:state.board.listObjects.map(list=>list._id===payload.listId?{...list,cards:[...list.cards,payload.cardId]}:list)}};case ADD_CHECKLIST_ITEM:case EDIT_CHECKLIST_ITEM:case COMPLETE_CHECKLIST_ITEM:case DELETE_CHECKLIST_ITEM:case ARCHIVE_CARD:case ADD_CARD_MEMBER:case EDIT_CARD:return{...state,board:{...state.board,cardObjects:state.board.cardObjects.map(card=>card._id===payload._id?payload:card)}};case MOVE_CARD:return{...state,board:{...state.board,listObjects:state.board.listObjects.map(list=>list._id===payload.from._id?payload.from:list._id===payload.to._id?payload.to:list),cardObjects:state.board.cardObjects.filter(card=>card._id!==payload.cardId||payload.to._id===payload.from._id)}};case DELETE_CARD:return{...state,board:{...state.board,cardObjects:state.board.cardObjects.filter(card=>card._id!==payload),listObjects:state.board.listObjects.map(list=>list.cards.includes(payload)?{...list,cards:list.cards.filter(card=>card!==payload)}:list)}};case GET_ACTIVITY:return{...state,board:{...state.board,activity:payload}};case ADD_MEMBER:return{...state,board:{...state.board,members:payload}};case MOVE_LIST:return{...state,board:{...state.board,lists:payload}};default:return state;}}","map":{"version":3,"names":["CLEAR_BOARD","GET_BOARDS","GET_BOARD","ADD_BOARD","BOARD_ERROR","RENAME_BOARD","GET_LIST","ADD_LIST","RENAME_LIST","ARCHIVE_LIST","GET_CARD","ADD_CARD","EDIT_CARD","MOVE_CARD","ARCHIVE_CARD","DELETE_CARD","GET_ACTIVITY","ADD_MEMBER","MOVE_LIST","ADD_CARD_MEMBER","ADD_CHECKLIST_ITEM","EDIT_CHECKLIST_ITEM","COMPLETE_CHECKLIST_ITEM","DELETE_CHECKLIST_ITEM","initialState","boards","board","dashboardLoading","error","state","arguments","length","undefined","action","type","payload","listObjects","lists","_id","map","list","cardObjects","listId","cards","cardId","card","from","to","filter","includes","activity","members"],"sources":["D:/David/Escritorio/CHAMBA/Gestor-de-proyectos/frontend/client/src/reducers/board.js"],"sourcesContent":["import {\r\n  CLEAR_BOARD,\r\n  GET_BOARDS,\r\n  GET_BOARD,\r\n  ADD_BOARD,\r\n  BOARD_ERROR,\r\n  RENAME_BOARD,\r\n  GET_LIST,\r\n  ADD_LIST,\r\n  RENAME_LIST,\r\n  ARCHIVE_LIST,\r\n  GET_CARD,\r\n  ADD_CARD,\r\n  EDIT_CARD,\r\n  MOVE_CARD,\r\n  ARCHIVE_CARD,\r\n  DELETE_CARD,\r\n  GET_ACTIVITY,\r\n  ADD_MEMBER,\r\n  MOVE_LIST,\r\n  ADD_CARD_MEMBER,\r\n  ADD_CHECKLIST_ITEM,\r\n  EDIT_CHECKLIST_ITEM,\r\n  COMPLETE_CHECKLIST_ITEM,\r\n  DELETE_CHECKLIST_ITEM,\r\n} from '../actions/types';\r\n\r\nconst initialState = {\r\n  boards: [],\r\n  board: null,\r\n  dashboardLoading: true,\r\n  error: {},\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  const { type, payload } = action;\r\n\r\n  switch (type) {\r\n    case CLEAR_BOARD:\r\n      return {\r\n        ...state,\r\n        board: null,\r\n      };\r\n    case GET_BOARDS:\r\n      return {\r\n        ...state,\r\n        boards: payload,\r\n        dashboardLoading: false,\r\n      };\r\n    case RENAME_BOARD:\r\n    case GET_BOARD:\r\n      return {\r\n        ...state,\r\n        board: { ...state.board, ...payload },\r\n      };\r\n    case ADD_BOARD:\r\n      return {\r\n        ...state,\r\n        boards: [payload, ...state.boards],\r\n      };\r\n    case BOARD_ERROR:\r\n      return {\r\n        ...state,\r\n        error: payload,\r\n      };\r\n    case GET_LIST:\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          listObjects: [...state.board.listObjects, payload],\r\n        },\r\n      };\r\n    case ADD_LIST:\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: [...state.board.lists, payload._id],\r\n        },\r\n      };\r\n    case ARCHIVE_LIST:\r\n    case RENAME_LIST:\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          listObjects: state.board.listObjects.map((list) =>\r\n            list._id === payload._id ? payload : list\r\n          ),\r\n        },\r\n      };\r\n    case GET_CARD:\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          cardObjects: [...state.board.cardObjects, payload],\r\n        },\r\n      };\r\n    case ADD_CARD:\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          listObjects: state.board.listObjects.map((list) =>\r\n            list._id === payload.listId\r\n              ? { ...list, cards: [...list.cards, payload.cardId] }\r\n              : list\r\n          ),\r\n        },\r\n      };\r\n    case ADD_CHECKLIST_ITEM:\r\n    case EDIT_CHECKLIST_ITEM:\r\n    case COMPLETE_CHECKLIST_ITEM:\r\n    case DELETE_CHECKLIST_ITEM:\r\n    case ARCHIVE_CARD:\r\n    case ADD_CARD_MEMBER:\r\n    case EDIT_CARD:\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          cardObjects: state.board.cardObjects.map((card) =>\r\n            card._id === payload._id ? payload : card\r\n          ),\r\n        },\r\n      };\r\n    case MOVE_CARD:\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          listObjects: state.board.listObjects.map((list) =>\r\n            list._id === payload.from._id\r\n              ? payload.from\r\n              : list._id === payload.to._id\r\n              ? payload.to\r\n              : list\r\n          ),\r\n          cardObjects: state.board.cardObjects.filter(\r\n            (card) => card._id !== payload.cardId || payload.to._id === payload.from._id\r\n          ),\r\n        },\r\n      };\r\n    case DELETE_CARD:\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          cardObjects: state.board.cardObjects.filter((card) => card._id !== payload),\r\n          listObjects: state.board.listObjects.map((list) =>\r\n            list.cards.includes(payload)\r\n              ? { ...list, cards: list.cards.filter((card) => card !== payload) }\r\n              : list\r\n          ),\r\n        },\r\n      };\r\n    case GET_ACTIVITY:\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          activity: payload,\r\n        },\r\n      };\r\n    case ADD_MEMBER:\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          members: payload,\r\n        },\r\n      };\r\n    case MOVE_LIST:\r\n      return {\r\n        ...state,\r\n        board: {\r\n          ...state.board,\r\n          lists: payload,\r\n        },\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}