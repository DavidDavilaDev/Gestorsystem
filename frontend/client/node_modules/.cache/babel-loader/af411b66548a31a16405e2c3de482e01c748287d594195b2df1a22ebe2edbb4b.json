{"ast":null,"code":"import React,{Fragment,useState,useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{moveList}from'../../actions/board';import Button from'@material-ui/core/Button';import Dialog from'@material-ui/core/Dialog';import DialogActions from'@material-ui/core/DialogActions';import DialogTitle from'@material-ui/core/DialogTitle';import CloseIcon from'@material-ui/icons/Close';import InputLabel from'@material-ui/core/InputLabel';import MenuItem from'@material-ui/core/MenuItem';import FormControl from'@material-ui/core/FormControl';import Select from'@material-ui/core/Select';import useStyles from'../../utils/dialogStyles';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const MoveList=_ref=>{let{listId,closeMenu}=_ref;const classes=useStyles();const[openDialog,setOpenDialog]=useState(false);const[position,setPosition]=useState(0);const[positions,setPositions]=useState([0]);const lists=useSelector(state=>state.board.board.lists);const listObjects=useSelector(state=>state.board.board.listObjects);const dispatch=useDispatch();useEffect(()=>{const mappedListObjects=listObjects.sort((a,b)=>lists.findIndex(id=>id===a._id)-lists.findIndex(id=>id===b._id)).map((list,index)=>({list,index}));setPositions(mappedListObjects.filter(list=>!list.list.archived).map(list=>list.index));setPosition(mappedListObjects.findIndex(list=>list.list._id===listId));},[lists,listId,listObjects]);const onSubmit=async()=>{dispatch(moveList(listId,{toIndex:position}));setOpenDialog(false);closeMenu();};return/*#__PURE__*/_jsxs(Fragment,{children:[/*#__PURE__*/_jsx(\"div\",{onClick:()=>setOpenDialog(true),children:\"Mover Lista\"}),/*#__PURE__*/_jsxs(Dialog,{open:openDialog,onClose:()=>setOpenDialog(false),children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.moveListTop,children:[/*#__PURE__*/_jsx(DialogTitle,{children:'Move List'}),/*#__PURE__*/_jsx(Button,{onClick:()=>setOpenDialog(false),children:/*#__PURE__*/_jsx(CloseIcon,{})})]}),/*#__PURE__*/_jsx(DialogActions,{className:classes.moveListBottom,children:/*#__PURE__*/_jsxs(FormControl,{children:[/*#__PURE__*/_jsx(InputLabel,{shrink:true,children:\"Posicion\"}),/*#__PURE__*/_jsx(Select,{value:position,required:true,onChange:e=>setPosition(e.target.value),displayEmpty:true,children:positions.map((position,index)=>/*#__PURE__*/_jsx(MenuItem,{value:position,children:index+1},position))}),/*#__PURE__*/_jsx(Button,{type:\"submit\",variant:\"contained\",color:\"primary\",className:classes.moveListButton,onClick:onSubmit,children:\"Mover Lista\"})]})})]})]});};export default MoveList;","map":{"version":3,"names":["React","Fragment","useState","useEffect","useSelector","useDispatch","moveList","Button","Dialog","DialogActions","DialogTitle","CloseIcon","InputLabel","MenuItem","FormControl","Select","useStyles","jsx","_jsx","jsxs","_jsxs","MoveList","_ref","listId","closeMenu","classes","openDialog","setOpenDialog","position","setPosition","positions","setPositions","lists","state","board","listObjects","dispatch","mappedListObjects","sort","a","b","findIndex","id","_id","map","list","index","filter","archived","onSubmit","toIndex","children","onClick","open","onClose","className","moveListTop","moveListBottom","shrink","value","required","onChange","e","target","displayEmpty","type","variant","color","moveListButton"],"sources":["D:/David/Escritorio/CHAMBA/Gestor-de-proyectos/frontend/client/src/components/list/MoveList.js"],"sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { moveList } from '../../actions/board';\r\n\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport DialogActions from '@material-ui/core/DialogActions';\r\nimport DialogTitle from '@material-ui/core/DialogTitle';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport useStyles from '../../utils/dialogStyles';\r\n\r\nconst MoveList = ({ listId, closeMenu }) => {\r\n  const classes = useStyles();\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n  const [position, setPosition] = useState(0);\r\n  const [positions, setPositions] = useState([0]);\r\n  const lists = useSelector((state) => state.board.board.lists);\r\n  const listObjects = useSelector((state) => state.board.board.listObjects);\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    const mappedListObjects = listObjects\r\n      .sort(\r\n        (a, b) =>\r\n          lists.findIndex((id) => id === a._id) - lists.findIndex((id) => id === b._id)\r\n      )\r\n      .map((list, index) => ({ list, index }));\r\n    setPositions(\r\n      mappedListObjects.filter((list) => !list.list.archived).map((list) => list.index)\r\n    );\r\n    setPosition(mappedListObjects.findIndex((list) => list.list._id === listId));\r\n  }, [lists, listId, listObjects]);\r\n\r\n  const onSubmit = async () => {\r\n    dispatch(moveList(listId, { toIndex: position }));\r\n    setOpenDialog(false);\r\n    closeMenu();\r\n  };\r\n\r\n  return (\r\n    <Fragment>\r\n      <div onClick={() => setOpenDialog(true)}>Mover Lista</div>\r\n      <Dialog open={openDialog} onClose={() => setOpenDialog(false)}>\r\n        <div className={classes.moveListTop}>\r\n          <DialogTitle>{'Move List'}</DialogTitle>\r\n          <Button onClick={() => setOpenDialog(false)}>\r\n            <CloseIcon />\r\n          </Button>\r\n        </div>\r\n        <DialogActions className={classes.moveListBottom}>\r\n          <FormControl>\r\n            <InputLabel shrink>Posicion</InputLabel>\r\n            <Select\r\n              value={position}\r\n              required\r\n              onChange={(e) => setPosition(e.target.value)}\r\n              displayEmpty\r\n            >\r\n              {positions.map((position, index) => (\r\n                <MenuItem key={position} value={position}>\r\n                  {index + 1}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n            <Button\r\n              type='submit'\r\n              variant='contained'\r\n              color='primary'\r\n              className={classes.moveListButton}\r\n              onClick={onSubmit}\r\n            >\r\n              Mover Lista\r\n            </Button>\r\n          </FormControl>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nMoveList.propTypes = {\r\n  listId: PropTypes.string.isRequired,\r\n  closeMenu: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default MoveList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}