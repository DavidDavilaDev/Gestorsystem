{"ast":null,"code":"import React,{useRef,useState,useEffect}from'react';import{useSelector,useDispatch}from'react-redux';import{Draggable,Droppable}from'react-beautiful-dnd';import{getList}from'../../actions/board';import ListTitle from'./ListTitle';import ListMenu from'./ListMenu';import Card from'../card/Card';import CreateCardForm from'./CreateCardForm';import Button from'@material-ui/core/Button';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const List=_ref=>{let{listId,index}=_ref;const[addingCard,setAddingCard]=useState(false);const list=useSelector(state=>state.board.board.listObjects.find(object=>object._id===listId));const dispatch=useDispatch();useEffect(()=>{dispatch(getList(listId));},[dispatch,listId]);const createCardFormRef=useRef(null);useEffect(()=>{addingCard&&createCardFormRef.current.scrollIntoView();},[addingCard]);return!list||list&&list.archived?'':/*#__PURE__*/_jsx(Draggable,{draggableId:listId,index:index,children:provided=>/*#__PURE__*/_jsxs(\"div\",{className:\"list-wrapper\",...provided.draggableProps,...provided.dragHandleProps,ref:provided.innerRef,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"list-top\",children:[/*#__PURE__*/_jsx(ListTitle,{list:list}),/*#__PURE__*/_jsx(ListMenu,{listId:listId})]}),/*#__PURE__*/_jsx(Droppable,{droppableId:listId,type:\"card\",children:provided=>/*#__PURE__*/_jsxs(\"div\",{className:\"list \".concat(addingCard?'adding-card':'not-adding-card'),...provided.droppableProps,ref:provided.innerRef,children:[/*#__PURE__*/_jsx(\"div\",{className:\"cards\",children:list.cards.map((cardId,index)=>/*#__PURE__*/_jsx(Card,{cardId:cardId,list:list,index:index},cardId))}),provided.placeholder,addingCard&&/*#__PURE__*/_jsx(\"div\",{ref:createCardFormRef,children:/*#__PURE__*/_jsx(CreateCardForm,{listId:listId,setAdding:setAddingCard})})]})}),!addingCard&&/*#__PURE__*/_jsx(\"div\",{className:\"create-card-button\",children:/*#__PURE__*/_jsx(Button,{variant:\"contained\",onClick:()=>setAddingCard(true),children:\"+ A\\xF1adir una carta\"})})]})});};export default List;","map":{"version":3,"names":["React","useRef","useState","useEffect","useSelector","useDispatch","Draggable","Droppable","getList","ListTitle","ListMenu","Card","CreateCardForm","Button","jsx","_jsx","jsxs","_jsxs","List","_ref","listId","index","addingCard","setAddingCard","list","state","board","listObjects","find","object","_id","dispatch","createCardFormRef","current","scrollIntoView","archived","draggableId","children","provided","className","draggableProps","dragHandleProps","ref","innerRef","droppableId","type","concat","droppableProps","cards","map","cardId","placeholder","setAdding","variant","onClick"],"sources":["D:/David/Escritorio/CHAMBA/Gestor-de-proyectos/frontend/client/src/components/list/List.js"],"sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\r\nimport { getList } from '../../actions/board';\r\nimport ListTitle from './ListTitle';\r\nimport ListMenu from './ListMenu';\r\nimport Card from '../card/Card';\r\nimport CreateCardForm from './CreateCardForm';\r\nimport Button from '@material-ui/core/Button';\r\n\r\nconst List = ({ listId, index }) => {\r\n  const [addingCard, setAddingCard] = useState(false);\r\n  const list = useSelector((state) =>\r\n    state.board.board.listObjects.find((object) => object._id === listId)\r\n  );\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getList(listId));\r\n  }, [dispatch, listId]);\r\n\r\n  const createCardFormRef = useRef(null);\r\n  useEffect(() => {\r\n    addingCard && createCardFormRef.current.scrollIntoView();\r\n  }, [addingCard]);\r\n\r\n  return !list || (list && list.archived) ? (\r\n    ''\r\n  ) : (\r\n    <Draggable draggableId={listId} index={index}>\r\n      {(provided) => (\r\n        <div\r\n          className='list-wrapper'\r\n          {...provided.draggableProps}\r\n          {...provided.dragHandleProps}\r\n          ref={provided.innerRef}\r\n        >\r\n          <div className='list-top'>\r\n            <ListTitle list={list} />\r\n            <ListMenu listId={listId} />\r\n          </div>\r\n          <Droppable droppableId={listId} type='card'>\r\n            {(provided) => (\r\n              <div\r\n                className={`list ${addingCard ? 'adding-card' : 'not-adding-card'}`}\r\n                {...provided.droppableProps}\r\n                ref={provided.innerRef}\r\n              >\r\n                <div className='cards'>\r\n                  {list.cards.map((cardId, index) => (\r\n                    <Card key={cardId} cardId={cardId} list={list} index={index} />\r\n                  ))}\r\n                </div>\r\n                {provided.placeholder}\r\n                {addingCard && (\r\n                  <div ref={createCardFormRef}>\r\n                    <CreateCardForm listId={listId} setAdding={setAddingCard} />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            )}\r\n          </Droppable>\r\n          {!addingCard && (\r\n            <div className='create-card-button'>\r\n              <Button variant='contained' onClick={() => setAddingCard(true)}>\r\n                + AÃ±adir una carta\r\n              </Button>\r\n            </div>\r\n          )}\r\n        </div>\r\n      )}\r\n    </Draggable>\r\n  );\r\n};\r\n\r\nList.propTypes = {\r\n  listId: PropTypes.string.isRequired,\r\n  index: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default List;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}