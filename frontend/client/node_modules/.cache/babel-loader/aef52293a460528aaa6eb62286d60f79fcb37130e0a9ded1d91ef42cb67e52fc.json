{"ast":null,"code":"import React,{useState}from'react';import{useDispatch}from'react-redux';import{withRouter}from'react-router-dom';import{addBoard}from'../../actions/board';import{Modal,TextField,Button}from'@material-ui/core';import CloseIcon from'@material-ui/icons/Close';import useStyles from'../../utils/modalStyles';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const CreateBoard=_ref=>{let{history}=_ref;const classes=useStyles();const[open,setOpen]=useState(false);const[title,setTitle]=useState('');const dispatch=useDispatch();const onSubmit=async e=>{e.preventDefault();dispatch(addBoard({title},history));};const body=/*#__PURE__*/_jsxs(\"div\",{className:\"\".concat(classes.paper,\" \").concat(classes.createBoardModal),children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.modalTop,children:[/*#__PURE__*/_jsx(\"h1\",{children:\"Crear nueva tablero\"}),/*#__PURE__*/_jsx(Button,{onClick:()=>setOpen(false),children:/*#__PURE__*/_jsx(CloseIcon,{})})]}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:e=>onSubmit(e),children:[/*#__PURE__*/_jsx(TextField,{variant:\"outlined\",margin:\"normal\",required:true,fullWidth:true,label:\"Add board title\",autoFocus:true,value:title,onChange:e=>setTitle(e.target.value)}),/*#__PURE__*/_jsx(Button,{type:\"submit\",fullWidth:true,variant:\"contained\",color:\"primary\",children:\"Crar\"})]})]});return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"button\",{className:\"board-card create-board-card\",onClick:()=>setOpen(true),children:\"Crear nuevo Tablero\"}),/*#__PURE__*/_jsx(Modal,{open:open,onClose:()=>setOpen(false),children:body})]});};export default withRouter(CreateBoard);","map":{"version":3,"names":["React","useState","useDispatch","withRouter","addBoard","Modal","TextField","Button","CloseIcon","useStyles","jsx","_jsx","jsxs","_jsxs","CreateBoard","_ref","history","classes","open","setOpen","title","setTitle","dispatch","onSubmit","e","preventDefault","body","className","concat","paper","createBoardModal","children","modalTop","onClick","variant","margin","required","fullWidth","label","autoFocus","value","onChange","target","type","color","onClose"],"sources":["D:/David/Escritorio/CHAMBA/Gestor-de-proyectos/frontend/client/src/components/other/CreateBoard.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { withRouter } from 'react-router-dom';\r\nimport { addBoard } from '../../actions/board';\r\nimport { Modal, TextField, Button } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport useStyles from '../../utils/modalStyles';\r\n\r\nconst CreateBoard = ({ history }) => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [title, setTitle] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const onSubmit = async (e) => {\r\n    e.preventDefault();\r\n    dispatch(addBoard({ title }, history));\r\n  };\r\n\r\n  const body = (\r\n    <div className={`${classes.paper} ${classes.createBoardModal}`}>\r\n      <div className={classes.modalTop}>\r\n        <h1>Crear nueva tablero</h1>\r\n        <Button onClick={() => setOpen(false)}>\r\n          <CloseIcon />\r\n        </Button>\r\n      </div>\r\n      <form onSubmit={(e) => onSubmit(e)}>\r\n        <TextField\r\n          variant='outlined'\r\n          margin='normal'\r\n          required\r\n          fullWidth\r\n          label='Add board title'\r\n          autoFocus\r\n          value={title}\r\n          onChange={(e) => setTitle(e.target.value)}\r\n        />\r\n        <Button type='submit' fullWidth variant='contained' color='primary'>\r\n          Crar\r\n        </Button>\r\n      </form>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <button className='board-card create-board-card' onClick={() => setOpen(true)}>\r\n        Crear nuevo Tablero\r\n      </button>\r\n      <Modal open={open} onClose={() => setOpen(false)}>\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default withRouter(CreateBoard);\r\n"],"mappings":"AAAA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,KAAQ,OAAO,CACvC,OAASC,WAAW,KAAQ,aAAa,CACzC,OAASC,UAAU,KAAQ,kBAAkB,CAC7C,OAASC,QAAQ,KAAQ,qBAAqB,CAC9C,OAASC,KAAK,CAAEC,SAAS,CAAEC,MAAM,KAAQ,mBAAmB,CAC5D,MAAO,CAAAC,SAAS,KAAM,0BAA0B,CAChD,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAAC,OAAAC,GAAA,IAAAC,IAAA,CAAAC,IAAA,IAAAC,KAAA,yBAEhD,KAAM,CAAAC,WAAW,CAAGC,IAAA,EAAiB,IAAhB,CAAEC,OAAQ,CAAC,CAAAD,IAAA,CAC9B,KAAM,CAAAE,OAAO,CAAGR,SAAS,CAAC,CAAC,CAC3B,KAAM,CAACS,IAAI,CAAEC,OAAO,CAAC,CAAGlB,QAAQ,CAAC,KAAK,CAAC,CACvC,KAAM,CAACmB,KAAK,CAAEC,QAAQ,CAAC,CAAGpB,QAAQ,CAAC,EAAE,CAAC,CACtC,KAAM,CAAAqB,QAAQ,CAAGpB,WAAW,CAAC,CAAC,CAE9B,KAAM,CAAAqB,QAAQ,CAAG,KAAO,CAAAC,CAAC,EAAK,CAC5BA,CAAC,CAACC,cAAc,CAAC,CAAC,CAClBH,QAAQ,CAAClB,QAAQ,CAAC,CAAEgB,KAAM,CAAC,CAAEJ,OAAO,CAAC,CAAC,CACxC,CAAC,CAED,KAAM,CAAAU,IAAI,cACRb,KAAA,QAAKc,SAAS,IAAAC,MAAA,CAAKX,OAAO,CAACY,KAAK,MAAAD,MAAA,CAAIX,OAAO,CAACa,gBAAgB,CAAG,CAAAC,QAAA,eAC7DlB,KAAA,QAAKc,SAAS,CAAEV,OAAO,CAACe,QAAS,CAAAD,QAAA,eAC/BpB,IAAA,OAAAoB,QAAA,CAAI,qBAAmB,CAAI,CAAC,cAC5BpB,IAAA,CAACJ,MAAM,EAAC0B,OAAO,CAAEA,CAAA,GAAMd,OAAO,CAAC,KAAK,CAAE,CAAAY,QAAA,cACpCpB,IAAA,CAACH,SAAS,GAAE,CAAC,CACP,CAAC,EACN,CAAC,cACNK,KAAA,SAAMU,QAAQ,CAAGC,CAAC,EAAKD,QAAQ,CAACC,CAAC,CAAE,CAAAO,QAAA,eACjCpB,IAAA,CAACL,SAAS,EACR4B,OAAO,CAAC,UAAU,CAClBC,MAAM,CAAC,QAAQ,CACfC,QAAQ,MACRC,SAAS,MACTC,KAAK,CAAC,iBAAiB,CACvBC,SAAS,MACTC,KAAK,CAAEpB,KAAM,CACbqB,QAAQ,CAAGjB,CAAC,EAAKH,QAAQ,CAACG,CAAC,CAACkB,MAAM,CAACF,KAAK,CAAE,CAC3C,CAAC,cACF7B,IAAA,CAACJ,MAAM,EAACoC,IAAI,CAAC,QAAQ,CAACN,SAAS,MAACH,OAAO,CAAC,WAAW,CAACU,KAAK,CAAC,SAAS,CAAAb,QAAA,CAAC,MAEpE,CAAQ,CAAC,EACL,CAAC,EACJ,CACN,CAED,mBACElB,KAAA,QAAAkB,QAAA,eACEpB,IAAA,WAAQgB,SAAS,CAAC,8BAA8B,CAACM,OAAO,CAAEA,CAAA,GAAMd,OAAO,CAAC,IAAI,CAAE,CAAAY,QAAA,CAAC,qBAE/E,CAAQ,CAAC,cACTpB,IAAA,CAACN,KAAK,EAACa,IAAI,CAAEA,IAAK,CAAC2B,OAAO,CAAEA,CAAA,GAAM1B,OAAO,CAAC,KAAK,CAAE,CAAAY,QAAA,CAC9CL,IAAI,CACA,CAAC,EACL,CAAC,CAEV,CAAC,CAED,cAAe,CAAAvB,UAAU,CAACW,WAAW,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}