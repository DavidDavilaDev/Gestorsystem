{"ast":null,"code":"import React,{useState}from'react';import{useSelector}from'react-redux';import Moment from'react-moment';import Drawer from'@material-ui/core/Drawer';import List from'@material-ui/core/List';import Divider from'@material-ui/core/Divider';import Button from'@material-ui/core/Button';import MoreHorizIcon from'@material-ui/icons/MoreHoriz';import ChevronLeftIcon from'@material-ui/icons/ChevronLeft';import CloseIcon from'@material-ui/icons/Close';import ListItem from'@material-ui/core/ListItem';import ListItemIcon from'@material-ui/core/ListItemIcon';import ListItemText from'@material-ui/core/ListItemText';import ArchiveIcon from'@material-ui/icons/Archive';import ArchivedLists from'./ArchivedLists';import ArchivedCards from'./ArchivedCards';import useStyles from'../../utils/drawerStyles';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BoardDrawer=()=>{const classes=useStyles();const[open,setOpen]=useState(false);const[viewingArchivedLists,setViewingArchivedLists]=useState(false);const[viewingArchivedCards,setViewingArchivedCards]=useState(false);const[activityChunks,setActivityChunks]=useState(1);const activity=useSelector(state=>state.board.board.activity);const handleClose=()=>{setOpen(false);setActivityChunks(1);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(Button,{onClick:()=>setOpen(true),variant:\"contained\",className:open?classes.hide:classes.showMenuButton,children:[/*#__PURE__*/_jsx(MoreHorizIcon,{fontSize:\"small\"}),\" Ver Menu\"]}),/*#__PURE__*/_jsxs(Drawer,{className:open?classes.drawer:classes.hide,variant:\"persistent\",anchor:\"right\",open:open,classes:{paper:classes.drawerPaper},children:[!viewingArchivedLists&&!viewingArchivedCards?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.drawerHeader,children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Menu\"}),/*#__PURE__*/_jsx(Button,{onClick:handleClose,children:/*#__PURE__*/_jsx(CloseIcon,{})})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsxs(List,{children:[/*#__PURE__*/_jsxs(ListItem,{button:true,onClick:()=>setViewingArchivedLists(true),children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(ArchiveIcon,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:'Archivar listas'})]}),/*#__PURE__*/_jsxs(ListItem,{button:true,onClick:()=>setViewingArchivedCards(true),children:[/*#__PURE__*/_jsx(ListItemIcon,{children:/*#__PURE__*/_jsx(ArchiveIcon,{})}),/*#__PURE__*/_jsx(ListItemText,{primary:'Archivar cartas'})]})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(\"div\",{className:classes.activityTitle,children:/*#__PURE__*/_jsx(\"h3\",{children:\"Actividad\"})}),/*#__PURE__*/_jsx(List,{children:activity.slice(0,activityChunks*10).map(activity=>/*#__PURE__*/_jsx(ListItem,{children:/*#__PURE__*/_jsx(ListItemText,{primary:activity.text,secondary:/*#__PURE__*/_jsx(Moment,{fromNow:true,children:activity.date})})},activity._id))}),/*#__PURE__*/_jsx(\"div\",{className:classes.viewMoreActivityButton,children:/*#__PURE__*/_jsx(Button,{disabled:activityChunks*10>activity.length,onClick:()=>setActivityChunks(activityChunks+1),children:\"Ver mas actividades\"})})]}):viewingArchivedLists?/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.drawerHeader,children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setViewingArchivedLists(false),children:/*#__PURE__*/_jsx(ChevronLeftIcon,{})}),/*#__PURE__*/_jsx(\"h3\",{children:\"Archivar listas\"}),/*#__PURE__*/_jsx(Button,{onClick:handleClose,children:/*#__PURE__*/_jsx(CloseIcon,{})})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(ArchivedLists,{})]}):/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"div\",{className:classes.drawerHeader,children:[/*#__PURE__*/_jsx(Button,{onClick:()=>setViewingArchivedCards(false),children:/*#__PURE__*/_jsx(ChevronLeftIcon,{})}),/*#__PURE__*/_jsx(\"h3\",{children:\"Archivar cartas\"}),/*#__PURE__*/_jsx(Button,{onClick:handleClose,children:/*#__PURE__*/_jsx(CloseIcon,{})})]}),/*#__PURE__*/_jsx(Divider,{}),/*#__PURE__*/_jsx(ArchivedCards,{})]}),/*#__PURE__*/_jsx(Divider,{})]})]});};export default BoardDrawer;","map":{"version":3,"names":["React","useState","useSelector","Moment","Drawer","List","Divider","Button","MoreHorizIcon","ChevronLeftIcon","CloseIcon","ListItem","ListItemIcon","ListItemText","ArchiveIcon","ArchivedLists","ArchivedCards","useStyles","jsx","_jsx","jsxs","_jsxs","BoardDrawer","classes","open","setOpen","viewingArchivedLists","setViewingArchivedLists","viewingArchivedCards","setViewingArchivedCards","activityChunks","setActivityChunks","activity","state","board","handleClose","children","onClick","variant","className","hide","showMenuButton","fontSize","drawer","anchor","paper","drawerPaper","drawerHeader","button","primary","activityTitle","slice","map","text","secondary","fromNow","date","_id","viewMoreActivityButton","disabled","length"],"sources":["D:/David/Escritorio/CHAMBA/Gestor-de-proyectos/frontend/client/src/components/board/BoardDrawer.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport Moment from 'react-moment';\r\n\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Button from '@material-ui/core/Button';\r\nimport MoreHorizIcon from '@material-ui/icons/MoreHoriz';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport ArchiveIcon from '@material-ui/icons/Archive';\r\n\r\nimport ArchivedLists from './ArchivedLists';\r\nimport ArchivedCards from './ArchivedCards';\r\nimport useStyles from '../../utils/drawerStyles';\r\n\r\nconst BoardDrawer = () => {\r\n  const classes = useStyles();\r\n  const [open, setOpen] = useState(false);\r\n  const [viewingArchivedLists, setViewingArchivedLists] = useState(false);\r\n  const [viewingArchivedCards, setViewingArchivedCards] = useState(false);\r\n  const [activityChunks, setActivityChunks] = useState(1);\r\n  const activity = useSelector((state) => state.board.board.activity);\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    setActivityChunks(1);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Button\r\n        onClick={() => setOpen(true)}\r\n        variant='contained'\r\n        className={open ? classes.hide : classes.showMenuButton}\r\n      >\r\n        <MoreHorizIcon fontSize='small' /> Ver Menu\r\n      </Button>\r\n      <Drawer\r\n        className={open ? classes.drawer : classes.hide}\r\n        variant='persistent'\r\n        anchor='right'\r\n        open={open}\r\n        classes={{\r\n          paper: classes.drawerPaper,\r\n        }}\r\n      >\r\n        {!viewingArchivedLists && !viewingArchivedCards ? (\r\n          <div>\r\n            <div className={classes.drawerHeader}>\r\n              <h3>Menu</h3>\r\n              <Button onClick={handleClose}>\r\n                <CloseIcon />\r\n              </Button>\r\n            </div>\r\n            <Divider />\r\n            <List>\r\n              <ListItem button onClick={() => setViewingArchivedLists(true)}>\r\n                <ListItemIcon>\r\n                  <ArchiveIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={'Archivar listas'} />\r\n              </ListItem>\r\n              <ListItem button onClick={() => setViewingArchivedCards(true)}>\r\n                <ListItemIcon>\r\n                  <ArchiveIcon />\r\n                </ListItemIcon>\r\n                <ListItemText primary={'Archivar cartas'} />\r\n              </ListItem>\r\n            </List>\r\n            <Divider />\r\n            <div className={classes.activityTitle}>\r\n              <h3>Actividad</h3>\r\n            </div>\r\n            <List>\r\n              {activity.slice(0, activityChunks * 10).map((activity) => (\r\n                <ListItem key={activity._id}>\r\n                  <ListItemText\r\n                    primary={activity.text}\r\n                    secondary={<Moment fromNow>{activity.date}</Moment>}\r\n                  />\r\n                </ListItem>\r\n              ))}\r\n            </List>\r\n            <div className={classes.viewMoreActivityButton}>\r\n              <Button\r\n                disabled={activityChunks * 10 > activity.length}\r\n                onClick={() => setActivityChunks(activityChunks + 1)}\r\n              >\r\n                Ver mas actividades\r\n              </Button>\r\n            </div>\r\n          </div>\r\n        ) : viewingArchivedLists ? (\r\n          <div>\r\n            <div className={classes.drawerHeader}>\r\n              <Button onClick={() => setViewingArchivedLists(false)}>\r\n                <ChevronLeftIcon />\r\n              </Button>\r\n              <h3>Archivar listas</h3>\r\n              <Button onClick={handleClose}>\r\n                <CloseIcon />\r\n              </Button>\r\n            </div>\r\n            <Divider />\r\n            <ArchivedLists />\r\n          </div>\r\n        ) : (\r\n          <div>\r\n            <div className={classes.drawerHeader}>\r\n              <Button onClick={() => setViewingArchivedCards(false)}>\r\n                <ChevronLeftIcon />\r\n              </Button>\r\n              <h3>Archivar cartas</h3>\r\n              <Button onClick={handleClose}>\r\n                <CloseIcon />\r\n              </Button>\r\n            </div>\r\n            <Divider />\r\n            <ArchivedCards />\r\n          </div>\r\n        )}\r\n        <Divider />\r\n      </Drawer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BoardDrawer;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}